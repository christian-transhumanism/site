---
title: Books about Christianity & Transhumanism
description: Curated reading list at the intersection of Christianity, technology, and the human future.
layout: default
permalink: /books/
---
{% include 'shared/content_topbar.njk' %}

<div class="container">
  <div class="row">
  <div class="col-md-12">
      <h1 class="page-header">Books about Christianity &amp; Transhumanism</h1>
      <p class="page-intro">Study and scholarship from the ancient past to the deep future.</p>

<div class="book-toolbar">
  <div class="btn-group btn-group-sm" role="group" aria-label="Book filter">
    <button type="button" class="btn btn-default book-filter-btn active" data-filter="all">All</button>
    <button type="button" class="btn btn-default book-filter-btn" data-filter="faith">Faith</button>
    <button type="button" class="btn btn-default book-filter-btn" data-filter="technology">Technology</button>
    <button type="button" class="btn btn-default book-filter-btn" data-filter="cta">CTA</button>
  </div>

  <label for="book-filter" class="visually-hidden">Filter books</label>
  <input id="book-filter" class="book-filter" type="search" placeholder="Filter by title, author, year, or tag" autocomplete="off" />
</div>

      <div id="book-list" class="book-grid">
  {% for book in books | sort(false, false, "title") %}
  {% set tags = book.tags or [] %}
      {% set primaryContributor = book.author or book.editor %}
      {% set searchIndex = (book.title ~ ' ' ~ (primaryContributor or '') ~ ' ' ~ (book.year or '') ~ ' ' ~ (tags | join(' '))) | lower %}
  <article class="book" data-search="{{ searchIndex }}" data-tags="{{ (tags | join(' ')) | lower }}">
    {% if book.image %}
      <figure class="book-cover">
        <a href="{{ book.url or '#' }}" rel="noopener">
          <img src="{{ book.image }}" alt="{{ book.imageAlt or (book.title ~ ' cover') }}" loading="lazy" decoding="async" width="300" height="450">
        </a>
      </figure>
    {% endif %}

    <div class="book-meta">
      <h2 class="book-title">
        <a href="{{ book.url or '#' }}" rel="noopener">{{ book.title }}</a>
      </h2>

      <p class="book-byline">
        {% if book.author %}
          <strong>{{ book.author }}</strong>
        {% elseif book.editor %}
          <strong>Edited by {{ book.editor }}</strong>
        {% endif %}
        {% if book.year %} • <span class="book-year">{{ book.year }}</span>{% endif %}
        {% if book.publisher %} • <span class="book-publisher">{{ book.publisher }}</span>{% endif %}
      </p>

      {% if tags | length %}
        <ul class="book-tags">
          {% for t in tags %}<li>{{ t }}</li>{% endfor %}
        </ul>
      {% endif %}

      <div class="book-desc">
        {{ book.body | excerpt(40) }}
      </div>

      <p class="book-links">
        <a class="btn" href="{{ book.url or '#' }}" rel="noopener nofollow">Details / Buy</a>
        {% if book.isbn %}<span class="isbn">ISBN: {{ book.isbn }}</span>{% endif %}
      </p>
    </div>
  </article>
  {% endfor %}
      </div>

      <script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "ItemList",
  "name": "Books about Christianity & Transhumanism",
  "itemListElement": [
    {% for book in books | sort(false, false, "title") %}
    {% set schemaAuthor = book.author or book.editor %}
    {
      "@type": "ListItem",
      "position": {{ loop.index }},
      "item": {
        "@type": "Book",
        "name": {{ book.title | dump }},
        {% if schemaAuthor %}"author": {{ schemaAuthor | dump }},{% endif %}
        {% if book.isbn %}"isbn": {{ book.isbn | dump }},{% endif %}
        {% if book.publisher %}"publisher": {{ book.publisher | dump }},{% endif %}
        {% if book.year %}"datePublished": "{{ book.year }}",{% endif %}
        "url": {{ (book.url or '#') | dump }}
      }
    }{% if not loop.last %},{% endif %}
    {% endfor %}
  ]
}
      </script>

      <script>
  (function(){
    const input = document.getElementById('book-filter');
    const items = Array.from(document.querySelectorAll('#book-list .book'));
    const buttons = Array.from(document.querySelectorAll('.book-filter-btn'));
    let category = 'all';

    function applyFilters(){
      const q = (input.value || '').trim().toLowerCase();
      const showAllCat = category === 'all';
      items.forEach(el => {
        const matchesSearch = !q || el.dataset.search.indexOf(q) !== -1;
        const tags = (el.dataset.tags || '');
        const matchesCat = showAllCat || (tags.split(/\s+/).indexOf(category) !== -1);
        const show = matchesSearch && matchesCat;
        el.style.display = show ? '' : 'none';
      });
    }

    input.addEventListener('input', applyFilters);
    buttons.forEach(btn => btn.addEventListener('click', function(){
      buttons.forEach(b => b.classList.remove('active'));
      this.classList.add('active');
      category = this.getAttribute('data-filter');
      applyFilters();
    }));

    applyFilters();
  })();
      </script>
    </div>
  </div>
</div>
